package controller;

import java.io.IOException;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import action.Action;
import vo.ActionForward;

@WebServlet("*.bo") //서블릿 주소 중 xxx.bo 주소에 대한 요청을 전달받아 처리
public class BoardFrontController extends HttpServlet {
	protected void doProcess(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException{
		//서블릿 요청 시 Get방식에 또는 Post방식의 요청이 들어오면 
		//공통으로 처리하기 위해 doGet(), doPost() 메서드에서 호출하는 메서드
		//=>파리미터로 request 객체와 response 객체를 전달받음
		
		//Post 방식 요청에 대한 한글 처리
		request.setCharacterEncoding("UTF-8");
		//서블릿 주소 가져오기
		String command = request.getServletPath();
		System.out.println("요청 서블릿 주소 :" + command);
		
		//각 요청에 대한 처리에 필요한 객체를 다루는 변수 선언
		Action action = null;
		ActionForward forward = null;
		//if문을 사용하여 각 서블릿 주소 판별 및 각 요청 처리를 위한 작업 요청
		//1. BoardWriteForm.bo 요청에 대한 Presentation Logic 처리
		if (command.equals("/BoardWriteForm.bo")) {
			/*
			 * 글쓰기 페이지에 대한 요청은 비지니스 로직 없이
			 * View 페이지(JSP)로 바로 포워딩 수행
			 * -기존 서블릿 주소가 유지되어야 하므로 Dispatcher방식 포워딩
			 * 		=>ActionForward 객체에 redirect 변수값을 false로 설정
			 * 			(boolean 타입 기본 값이 false 이므로 별도 설정 필요 없음)
			 * 		=>따라서, 포워딩 주소만 지정
			 * -포워딩 주소 : board 폴더 내의 qna_board_write.jsp
			 */
			//1.ActionForward객체 생성(변수는 이미 선언되어 있음)
			forward = new ActionForward();
			//2.포워딩 경로 설정
			
		}
	}

	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		//서블릿 요청 시 Get방식에 대한 요청이 들어오면 자동으로 호출되는 메서드
		//=>파리미터로 request 객체와 response 객체를 전달받음
		doProcess(request, response);
	}

	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		//서블릿 요청 시 Post방식에 대한 요청이 들어오면 자동으로 호출되는 메서드
		//=>파라미터로 request 객체와 response 객체를 전달받음
		doProcess(request, response);
	}

}
